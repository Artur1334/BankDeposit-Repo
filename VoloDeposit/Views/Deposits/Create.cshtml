@model VoloDeposit.ViewModel.Deposit.DepositCreateViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create Your Deposit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.BankID, "BankID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("BankID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BankID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DepositorID, "DepositorID", htmlAttributes: new { @class = "control-label col-md-2"})
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.DepositorID, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownList("DepositorID", null, htmlAttributes: new { @class = "form-control"})
                @Html.ValidationMessageFor(model => model.DepositorID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DepositType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("DepositType", null, htmlAttributes: new { @class = "form-control", id = "selectedDepositType" })
                @*@Html.EditorFor(model => model.DepositType, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.DepositType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control",id="amountid" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.DepositYear, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DepositYear, new { htmlAttributes = new { @class = "form-control",id="deposityearid" } })
                @Html.ValidationMessageFor(model => model.DepositYear, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="button" class="btn btn-info" data-toggle="modal" data-target="#myModal" onclick="Calculate()" >Create</button>
            </div>
        </div>

    </div>


    <div class="modal fade" id="myModal" role="dialog">
        <div class="modal-dialog modal-sm">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Information Page</h4>
                </div>
                <div class="modal-body">
                    <h4>Year</h4>
                    <p id="year"></p>
                    <h4>Rate`</h4>
                    <p id="rate"></p>
                    <h4>Final Amount`</h4>
                    <p id="amount"></p>
                </div>
                <div class="modal-footer">
                    <input type="submit" value="Confirm" class="btn btn-success" />
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Register", "Create", "Depositors")
</div>

<script>
function Calculate() {
   let percentage;
   let selectedType = $("#selectedDepositType option:selected").val();
   if (selectedType == 1) {
       percentage = 0.12;
   }
   if (selectedType == 2) {
       percentage = 0.13;
   }
   if (selectedType == 3) {
       percentage = 0.09;
   }
   let amount = parseInt(document.getElementById('amountid').value);
   let period = parseInt(document.getElementById('deposityearid').value);
   let calc = amount + ((percentage * amount) * period);
   document.getElementById('amount').innerHTML = calc;
   document.getElementById('year').innerHTML = period;
   document.getElementById('rate').innerHTML = percentage * 100 + "%";
};
</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
